[{"title":"1.搭建自己的技术博客","url":"/2023/03/07/hello-world/","content":"<h2 id=\"0-前言\"><a href=\"#0-前言\" class=\"headerlink\" title=\"0. 前言\"></a>0. 前言</h2><p>mff开始搭建自己的技术博客啦（划掉）。</p>\n<p>搭建内容：github(提供仓库、域名)+hexo(博客搭建工具)+next(一款简洁的hexo主题)，ps: 互动功能，集成Gitalk、集成Valine(评论区)。</p>\n<p>搭建技术博客其实是很多人都在做的事情啦。因此互联网上也有不少帖子对此提供教学。但是由于时效性、电脑配置、使用者对工具的熟悉度等种种问题，还是没有一个比较完备的帖子能让我从头到尾一路搭建起博客来。这就是我在踩坑、横跳多个网页后，决定将《搭建自己的技术博客——指北》作为第一篇文章的原因。</p>\n<p>另外，本人的操作系统是win10 64位，搭建时间是2023年3月。</p>\n<h2 id=\"1-准备\"><a href=\"#1-准备\" class=\"headerlink\" title=\"1. 准备\"></a>1. 准备</h2><h3 id=\"1-在Github-创建博客仓库\"><a href=\"#1-在Github-创建博客仓库\" class=\"headerlink\" title=\"1. 在Github 创建博客仓库\"></a>1. 在Github 创建博客仓库</h3><p>注意：名称必须为<code>&#123;username&#125;.github.io</code>。<code>username</code> 就是你的 GitHub 账户名称。</p>\n<p>可以先创建一个新文件 <code>index.html</code> ，作为网站的主页，然后在博客仓库 -&gt; setting -&gt; Pages看到网址：<code>https://yourname.github.io/</code> ，访问之后可以看到在 <code>index.html</code> 中写的内容。</p>\n<h3 id=\"2-在本机安装Node-js\"><a href=\"#2-在本机安装Node-js\" class=\"headerlink\" title=\"2. 在本机安装Node.js\"></a>2. 在本机安装<a href=\"https://nodejs.org/zh-cn/download/\">Node.js</a></h3><p>选择64位的 msi 版本。</p>\n<p>注意选择安装目录（如果跟我一样C盘容量不大的话）。</p>\n<p>安装完毕，在 cmd 窗口输入命令 <code>node -v</code> 和 <code>npm -v</code> 查看版本。</p>\n<p>注意全局包的下载路径也是默认在C盘，<code>npm root -g</code> 命令查看当前路径。而将其挪到其他目录的方法如下：</p>\n<h4 id=\"修改全局包路径\"><a href=\"#修改全局包路径\" class=\"headerlink\" title=\"修改全局包路径\"></a>修改全局包路径</h4><p>在 nodejs 的安装目录（我的在D盘）下创建两个文件夹，<code>node_global</code> 全局包存放，<code>node_cache</code> node缓存。</p>\n<p>在 cmd 执行下面两条命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm config <span class=\"built_in\">set</span> prefix <span class=\"string\">&quot;...\\...\\nodejs\\node_global&quot;</span></span><br><span class=\"line\">npm config <span class=\"built_in\">set</span> cache <span class=\"string\">&quot;...\\...\\nodejs\\node_cache&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"修改环境变量\"><a href=\"#修改环境变量\" class=\"headerlink\" title=\"修改环境变量\"></a>修改环境变量</h4><p>上面的步骤系统并不知道，所以要修改环境变量。设置 -&gt; 高级设置 -&gt; 属性 -&gt; 查看高级系统设置 -&gt; 环境变量(N) 。</p>\n<ul>\n<li>在上面的框框——用户变量(U)中，Path新增 <code>node_global</code> 的路径： <code>...\\...\\nodejs\\node_global</code></li>\n<li>在下面的框框——系统变量(S)中，直接新增系统变量，变量名： <code>NODE_PATH</code> ，变值：<code>...\\...\\nodejs\\node_global\\node_modules</code></li>\n</ul>\n<h3 id=\"3-在本机安装Git\"><a href=\"#3-在本机安装Git\" class=\"headerlink\" title=\"3. 在本机安装Git\"></a>3. 在本机安装<a href=\"https://git-scm.com/downloads\">Git</a></h3><p>下载安装完后，鼠标右键就会看到新增 <code>Git GUI Here</code> 和 <code>Git Bash Here</code> 。点击进入窗口后，字体和大小可能不合适。可以右键 -&gt; Options -&gt; Text -&gt; Select… -&gt; 调整字体及大小 -&gt; 确定。</p>\n<h2 id=\"2-Hexo\"><a href=\"#2-Hexo\" class=\"headerlink\" title=\"2. Hexo\"></a>2. Hexo</h2><p>官方的说法：Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 <a href=\"http://daringfireball.net/projects/markdown/\">Markdown</a>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>\n<h3 id=\"2-1-安装Hexo\"><a href=\"#2-1-安装Hexo\" class=\"headerlink\" title=\"2.1 安装Hexo\"></a>2.1 安装Hexo</h3><p>通过 npm 安装：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n\n<p>注意：这里的 <code>-g</code> 选项是让包安装到我们之前修改的位置，即 <code>...\\nodejs\\node_global\\node_modules\\hexo-cli</code>。但是这个时候你可以查看一下 <code>C:\\Users\\yourname\\AppData\\Roaming\\npm</code>目录下是否有该安装包。如果发现居然还是安装在了C盘，那么可以试试我找到的方法：</p>\n<ul>\n<li><p>进入nodejs安装目录下 <code>...\\nodejs\\node_modules\\npm</code> ，打开<code>.npmrc</code> 文件，输入下面的两行内容：（<code>...</code> 部分填入你的具体地址）</p>\n</li>\n<li><p>&#96;&#96;&#96;<br>prefix&#x3D;…\\nodejs\\node_global<br>cache&#x3D;…\\nodejs\\node_cache</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">### 2.2 创建项目</span><br><span class=\"line\"></span><br><span class=\"line\">先将 cmd 当前目录切换到你要创建项目的目录下面（通过命令 `cd` + `要切换到的目录`）。</span><br><span class=\"line\"></span><br><span class=\"line\">创建项目（比如，名为 hexo-blog ）:</span><br><span class=\"line\"></span><br><span class=\"line\">```bash</span><br><span class=\"line\">hexo init hexo-blog</span><br><span class=\"line\">cd hexo-blog</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure></li>\n</ul>\n<p>本地启动项目：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo generate</span><br><span class=\"line\">hexo server</span><br></pre></td></tr></table></figure>\n\n<p>访问 <code>http://localhost:4000</code> ，看到默认页面。</p>\n<p>注意：启动项目这里，cmd 窗口中会显示按 <code>ctrl+C</code> 可以中断 <code>hexo s</code> 。但是我实际尝试中发现无法中断进程，我找到的方法是：新打开一个 cmd 窗口，输入 <code>taskkill /F /IM node.exe</code> 命令并运行。然后你会发现进程已经中断或者再次按 <code>ctrl+C</code> 成功中断。</p>\n<h3 id=\"2-3-NexT-主题\"><a href=\"#2-3-NexT-主题\" class=\"headerlink\" title=\"2.3 NexT 主题\"></a>2.3 NexT 主题</h3><p>我有考虑要不要把 NexT 部分跟 Hexo 部分并列安排，但前者是后者的主题之一，嵌入的结构可能更合适。</p>\n<h4 id=\"2-3-1-安装并使用主题\"><a href=\"#2-3-1-安装并使用主题\" class=\"headerlink\" title=\"2.3.1 安装并使用主题\"></a>2.3.1 安装并使用主题</h4><p>在项目根目录下，运行安装命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/theme-next/hexo-theme-next themes / next</span><br></pre></td></tr></table></figure>\n\n<p>然后在目录 <code>...\\hexo-blog\\themes</code> 下可以看到增加了 next 文件夹。</p>\n<p>提前明确一个东西：站点配置文件是指项目根目录下的 <code>_config.yml</code> 文件。主题配置文件是next文件夹下的 <code>_config.yml</code> 文件。</p>\n<p>为了让 hexo 项目启用 next 主题，修改站点配置文件（注意这里是 <code>theme</code> 而不是 <code>themes</code>，<code>next</code> 前要有一个空格符）：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Extensions</span></span><br><span class=\"line\"><span class=\"comment\">## Plugins: https://hexo.io/plugins/</span></span><br><span class=\"line\"><span class=\"comment\">## Themes: https://hexo.io/themes/</span></span><br><span class=\"line\"><span class=\"attr\">theme:</span> <span class=\"string\">next</span></span><br></pre></td></tr></table></figure>\n\n<p>另外，站点可以指定语言：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">language: zh-CN</span><br></pre></td></tr></table></figure>\n\n<p>在next主题下有四种排版方式，修改整体配置文件（只能选一个scheme，其他注释掉）：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Schemes</span></span><br><span class=\"line\"><span class=\"comment\"># scheme: Muse</span></span><br><span class=\"line\"><span class=\"comment\">#scheme: Mist</span></span><br><span class=\"line\"><span class=\"attr\">scheme:</span> <span class=\"string\">Pisces</span></span><br><span class=\"line\"><span class=\"comment\"># scheme: Gemini</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-3-2-创建页、标签等界面\"><a href=\"#2-3-2-创建页、标签等界面\" class=\"headerlink\" title=\"2.3.2 创建页、标签等界面\"></a>2.3.2 创建页、标签等界面</h4><p>偷偷懒啦…</p>\n<p><a href=\"https://tding.top/archives/42c38b10.html\">Hexo-NexT (v7.0+) 主题配置 | 小丁的个人博客 (tding.top)</a></p>\n<p>这个博主讲的好清楚~</p>\n<p>不是每个功能都要配置，按需取用就可以了。</p>\n<p>这里介绍最基础的几个功能：</p>\n<ul>\n<li>创建一个页：</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo new page about</span><br></pre></td></tr></table></figure>\n\n<p>然后编辑目录 <code>\\source\\about\\index.md</code> ，我的内容如下：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\">title: about</span><br><span class=\"line\">date: 2023-03-08 12:12:44 </span><br><span class=\"line\">layout: about</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>创建文章：</li>\n</ul>\n<p><a href=\"https://blog.csdn.net/yaorongke/article/details/119089190\">https://blog.csdn.net/yaorongke/article/details/119089190</a></p>\n<p>再启动查看 <code>http://localhost:4000</code> 界面情况。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo g -d</span><br><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<p><code>hexo d</code> 有报错：</p>\n<p><code>ipconfig/flushdns</code> 刷新 DNS 解析缓存。</p>\n<h4 id=\"集成Gitalk，集成Valine\"><a href=\"#集成Gitalk，集成Valine\" class=\"headerlink\" title=\"集成Gitalk，集成Valine\"></a>集成Gitalk，集成Valine</h4><p><a href=\"https://juejin.cn/post/6929775469243924488\">https://juejin.cn/post/6929775469243924488</a></p>\n<p><a href=\"https://www.jianshu.com/p/b9e73c881729\">https://www.jianshu.com/p/b9e73c881729</a></p>\n"}]